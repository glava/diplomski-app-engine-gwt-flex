<?xml version="1.0" encoding="utf-8"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2008 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnableContainer container.

	 @see spark.components.SkinnableContainer

	  @langversion 3.0
	  @playerversion Flash 10
	  @playerversion AIR 1.5
	  @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
		alpha.disabled="0.5"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:components="view.components.*">
	<fx:Metadata>[HostComponent("view.CreatorComponent")]</fx:Metadata>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.formatters.DateFormatter;

			import spark.events.IndexChangeEvent;

			import util.ConstUtll;

			import view.irenderer.PriorityItemRenderer;
			/**
			 *  @private
			 */
			[Bindable]
			[Embed(source="assets/images/creator_back.png", scaleGridTop="12", scaleGridBottom="14", scaleGridLeft="0", scaleGridRight="120")]
			public var imgCls:Class;
			public static var DATE_FORMAT:String="DD/MM/YY";
			private var dateFormatter:DateFormatter;

			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				// Push backgroundColor and backgroundAlpha directly.
				// Handle undefined backgroundColor by hiding the background object.
				if (isNaN(getStyle("backgroundColor")))
				{
					background.visible=false;
				}
				else
				{
					background.visible=true;
					bgFill.color=getStyle("backgroundColor");
					bgFill.alpha=getStyle("backgroundAlpha");
				}

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			private function doLabel(item:Date):String
			{
				dateFormatter.formatString="MMM D, YYYY";
				return dateFormatter.format(item);
			}

			protected function priority_changeHandler(event:IndexChangeEvent):void
			{

				switch (event.newIndex)
				{
					case 0:
						flag.color=styleManager.getColorName("red");
						break;
					case 1:
						flag.color=styleManager.getColorName("yellow");
						break;
					case 2:
						flag.color=styleManager.getColorName("green");
						break;
				}
			}
		]]>

	</fx:Script>

	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"/>
	</s:states>

	<!--- Defines the appearance of the SkinnableContainer class's background. -->
	<s:Rect id="background"
			left="0"
			right="0"
			top="0"
			bottom="0">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill"
						  color="#FFFFFF"/>
		</s:fill>
	</s:Rect>

	<!--
		Note: setting the minimum size to 0 here so that changes to the host component's
		size will not be thwarted by this skin part's minimum size.   This is a compromise,
		more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
	-->
	<!--- @copy spark.components.SkinnableContainer#contentGroup -->
	<s:Group id="contentGroup"
			 left="0"
			 right="0"
			 top="0"
			 bottom="0"
			 minWidth="250"
			 minHeight="650"
			 width="250"
			 height="650">
		
		<mx:Image source="{imgCls}"
				  maintainAspectRatio="false"
				  width="100%"
				  height="100%"/>
		
		<s:VGroup paddingLeft="10">

			<s:Label text="Create New ToDo"
					 styleName="title"/>
			<s:TextArea width="200"
						height="100"
						id="toDoMsg"/>
			<s:HGroup verticalAlign="middle">
				<s:Label text="Select Due Date"/>
				<mx:DateField selectedDate="{new Date()}"
							  id="dateField"
							  firstDayOfWeek="{ConstUtll.MONDAY}"
							  editable="true"
							  formatString="{DATE_FORMAT}"/>
			</s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:Group>
					<components:PriorityFlag color="{styleManager.getColorName('red')}"
											 isLabelVisible="true"
											 id="flag"/>
				</s:Group>
				<s:DropDownList prompt="Set Priority"
								id="priority"
								selectedItem="0"
								itemRenderer="view.irenderer.PriorityItemRenderer"
								change="priority_changeHandler(event)"/>
			</s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label text="Cancel"
						 buttonMode="true"
						 id="lblCancel"/>
				<s:Button label="Create ToDo!!"
						  id="btnCreate"/>
			</s:HGroup>
		</s:VGroup>
	</s:Group>

</s:Skin>
